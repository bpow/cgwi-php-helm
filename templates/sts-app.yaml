apiVersion: v1
kind: Service
metadata:
  name: {{ include "cgwi-php.fullname" . }}
  labels:
    component: app
    {{- include "cgwi-php.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    component: app
    {{- include "cgwi-php.selectorLabels" . | nindent 4 }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cgwi-php.fullname" . }}-app
  labels:
    component: app
    {{- include "cgwi-php.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      component: app
      {{- include "cgwi-php.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "cgwi-php.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        component: app
        {{- include "cgwi-php.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cgwi-php.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: clone
          image: alpine/git
          command:
            - sh
            - -c
            - |-
              if [[ ! -d /srv/app/.git ]]; then
                git clone --single-branch --branch {{ .Values.git.branch }} --depth "1" {{ .Values.git.repository }} /srv/app
              fi
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
        - name: loaddata
          image: mysql:8.0
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-mysql
          command:
            - bash
            - -c
            - |-
              #!/bin/bash
              set -euo pipefail
              IFS=$'\n\t'

              # ensure we can connect to the database (will retry through k8s if not)
              if ! mysqladmin -u $MYSQL_USER -p$MYSQL_PASSWORD -h $DB_HOST ping --connect_timeout=30; then
                echo "Unable to connect to database, retrying once more..."
                if ! mysqladmin -u $MYSQL_USER -p$MYSQL_PASSWORD -h $DB_HOST ping --connect_timeout=30; then
                  echo "No luck this time, either... Will let k8s handle it."
                  exit 1
                fi
              fi

              # exit if data has already been loaded
              echo 'show tables;' | mysql -h $DB_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD --batch $MYSQL_DATABASE | grep -q 'migrations' && exit 0

              # load data
              zcat "/backups/db/$MYSQL_DATABASE.sql.gz" | mysql -h $DB_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE
          volumeMounts:
            - name: backups
              mountPath: /backups
        - name: composer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bash
            - -c
            - |-
              cd /srv/app
              if [[ ! -d vendor ]]; then
                composer install --no-interaction --no-plugins --no-scripts --prefer-dist --no-dev --no-suggest
              fi
              composer dump-autoload
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
      containers:
        - name: nginx
          command:
            - /usr/sbin/nginx
            - -g
            - daemon off;
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
            - name: fpm-upstream
              mountPath: /etc/nginx/conf.d/_upstream-fpm.conf
              subPath: _upstream-fpm.conf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: app
          command:
            - bash
            - /srv/app/scripts/entrypoint.sh
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "cgwi-php.fullname" . }}
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-app
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-mysql
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-redis
          env:
          - name: DB_DATABASE
            value: $(MYSQL_DATABASE)
          - name: DB_USERNAME
            value: $(MYSQL_USER)
          - name: DB_PASSWORD
            value: $(MYSQL_PASSWORD)
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: scheduler
          command:
            - bash
            - -c
            - |-
              /srv/app/scripts/awaitdb.bash
              while true
              do
                php artisan schedule:run --verbose --no-interaction &
                sleep 60
              done
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "cgwi-php.fullname" . }}
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-app
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-mysql
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-redis
          env:
          - name: DB_DATABASE
            value: $(MYSQL_DATABASE)
          - name: DB_USERNAME
            value: $(MYSQL_USER)
          - name: DB_PASSWORD
            value: $(MYSQL_PASSWORD)
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: queue
          command:
            - bash
            - -c
            - |-
              echo "role: queue"
              echo "SESSION_DRIVER: $SESSION_DRIVER"
              echo "CACHE_DRIVER: $CACHE_DRIVER"
              echo "QUEUE_CONNECTION: $QUEUE_CONNECTION..."
              /srv/app/scripts/awaitdb.bash
              php /srv/app/artisan queue:work --verbose --tries=3 --timeout=90
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "cgwi-php.fullname" . }}
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-app
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-mysql
            - secretRef:
                name: {{ include "cgwi-php.fullname" . }}-redis
          env:
          - name: DB_DATABASE
            value: $(MYSQL_DATABASE)
          - name: DB_USERNAME
            value: $(MYSQL_USER)
          - name: DB_PASSWORD
            value: $(MYSQL_PASSWORD)
          volumeMounts:
            - name: appdata
              mountPath: /srv/app
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: backups
        persistentVolumeClaim:
          claimName: {{ include "cgwi-php.fullname" . }}-backups
      - name: fpm-upstream
        configMap:
          name: {{ include "cgwi-php.fullname" . }}-fpm-upstream
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: appdata
      spec:
        accessModes: [ "ReadWriteMany" ]
        resources:
          requests:
            storage: 1Gi
